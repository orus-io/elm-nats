[{"name":"Nats","comment":" A nats.io client for Elm\n\n\n# pub/sub/request\n\n@docs open\n\n@docs publish\n\n@docs subscribe, groupSubscribe\n\n@docs request, requestWithTimeout, groupRequest, groupRequestWithTimeout\n\n\n# Types\n\n@docs State, Msg\n\n\n# Effects\n\n@docs Effect, Sub, applyEffectAndSub\n\n\n# ...\n\n@docs init, connect, update\n\n","unions":[],"aliases":[{"name":"Effect","comment":" A nats effect\n\nKind of like Cmd, but will be converted at the last moment to regular Cmd\n\n","args":["msg"],"type":"Nats.Internal.Types.Effect msg"},{"name":"Msg","comment":" A nats internal Msg\n","args":["msg"],"type":"Nats.Internal.Types.Msg msg"},{"name":"State","comment":" The nats internal state\n","args":["msg"],"type":"{ sockets : Dict.Dict String.String (Nats.Internal.SocketState.SocketState msg), defaultSocket : Maybe.Maybe String.String, nuid : Nats.Nuid.Nuid, inboxPrefix : String.String, time : Basics.Int }"},{"name":"Sub","comment":" A nats subscription\n\nWill be converted at the last moment to regular Sub.\n\n","args":["msg"],"type":"Nats.Internal.Types.Sub msg"}],"values":[{"name":"applyEffectAndSub","comment":" Update the nats state according to all the Nats.Effect and Nats.Sub gathered\nby the app root component, and emit all the necessary Cmd\n","type":"Nats.Config.Config msg -> Nats.Effect msg -> Nats.Sub msg -> Nats.State msg -> ( Nats.State msg, Platform.Cmd.Cmd msg )"},{"name":"connect","comment":" Connect the nats internal state to the ports\n","type":"Nats.Config.Config msg -> Nats.State msg -> Platform.Sub.Sub msg"},{"name":"groupRequest","comment":" Create a group request\n","type":"String.String -> String.String -> String.String -> (Result.Result Nats.Errors.Timeout String.String -> msg) -> Nats.Effect msg"},{"name":"groupRequestWithTimeout","comment":" Create a group request with a custom timeout\n","type":"String.String -> Basics.Int -> String.String -> String.String -> (Result.Result Nats.Errors.Timeout String.String -> msg) -> Nats.Effect msg"},{"name":"groupSubscribe","comment":" Subscribe to a subject with a group\n\nIf you wish to subscribe on a non-default socket, use Nats.Sub.onSocket\n\n","type":"String.String -> String.String -> (Nats.Protocol.Message -> msg) -> Nats.Sub msg"},{"name":"init","comment":" Initialise a new nats state\n","type":"Random.Seed -> Time.Posix -> Nats.State msg"},{"name":"open","comment":" Open a new socket\n","type":"Nats.Socket.Socket msg -> Nats.Effect msg"},{"name":"publish","comment":" Publish a new message on a given subject\n\nIf you wish to send it on a non-default socket, use Nats.Effect.onSocket\n\n","type":"String.String -> String.String -> Nats.Effect msg"},{"name":"request","comment":" Create a request\n\nThe timeout is 5s by default\n","type":"String.String -> String.String -> (Result.Result Nats.Errors.Timeout String.String -> msg) -> Nats.Effect msg"},{"name":"requestWithTimeout","comment":" Create a request with a custom timeout\n","type":"Basics.Int -> String.String -> String.String -> (Result.Result Nats.Errors.Timeout String.String -> msg) -> Nats.Effect msg"},{"name":"subscribe","comment":" Subscribe to a subject\n\nIf you wish to subscribe on a non-default socket, use Nats.Sub.onSocket\n\n","type":"String.String -> (Nats.Protocol.Message -> msg) -> Nats.Sub msg"},{"name":"update","comment":" ","type":"Nats.Config.Config msg -> Nats.Msg msg -> Nats.State msg -> ( Nats.State msg, Platform.Cmd.Cmd msg )"}],"binops":[]},{"name":"Nats.Config","comment":" Define the configuration for NATS\n\n@docs Config, init, withDebug, withDebugLog\n\n","unions":[],"aliases":[{"name":"Config","comment":" The NATS configuration\n","args":["msg"],"type":"{ parentMsg : Nats.Internal.Types.Msg msg -> msg, ports : Nats.PortsAPI.Ports (Nats.Internal.Types.Msg msg), debug : Basics.Bool, debugLog : String.String -> String.String -> String.String }"}],"values":[{"name":"init","comment":" Create a NATS configuration\n\nThe parentMsg typically transform a Nats.Msg into the host application top-level\nmessage.\n\n    type Msg =\n        NatsMsg (Nats.Msg Msg)\n        | ...\n\n    natsConfig =\n        Nats.Config.init NatsMsg {}\n\n","type":"(Nats.Internal.Types.Msg msg -> msg) -> Nats.PortsAPI.Ports (Nats.Internal.Types.Msg msg) -> Nats.Config.Config msg"},{"name":"withDebug","comment":" Enable debug\n","type":"Basics.Bool -> Nats.Config.Config msg -> Nats.Config.Config msg"},{"name":"withDebugLog","comment":" Provide a debug log function\n","type":"(String.String -> String.String -> String.String) -> Nats.Config.Config msg -> Nats.Config.Config msg"}],"binops":[]},{"name":"Nats.Effect","comment":" The Nats Effect API\n\nIf you are familiar with the core Cmd api, you will feel at home here\n\n@docs none, map, batch, onSocket\n\n","unions":[],"aliases":[],"values":[{"name":"batch","comment":" Batch several nats effect, pretty much like Cmd.batch\n","type":"List.List (Nats.Effect msg) -> Nats.Effect msg"},{"name":"map","comment":" Transform the messages produced by an effect\n","type":"(a -> b) -> Nats.Effect a -> Nats.Effect b"},{"name":"none","comment":" Tell nats there are no effect\n","type":"Nats.Effect msg"},{"name":"onSocket","comment":" Set / change the socket on which the effect should apply\n","type":"String.String -> Nats.Effect msg -> Nats.Effect msg"}],"binops":[]},{"name":"Nats.Errors","comment":" Nats errors\n\n@docs Timeout\n\n","unions":[],"aliases":[{"name":"Timeout","comment":" A timeout error. The value is the time at which the timeout\nwas triggered\n","args":[],"type":"Time.Posix"}],"values":[],"binops":[]},{"name":"Nats.PortsAPI","comment":" Defines the API for the ports that are required to interface with JS.\n\n@docs Message, Ports\n\n","unions":[],"aliases":[{"name":"Message","comment":" This is the Message type that is send/received on some of the ports\n","args":[],"type":"{ sid : String.String, message : String.String }"},{"name":"Ports","comment":" This is the API that the ports module must implement.\n","args":["msg"],"type":"{ open : ( String.String, String.String ) -> Platform.Cmd.Cmd msg, close : String.String -> Platform.Cmd.Cmd msg, send : Nats.PortsAPI.Message -> Platform.Cmd.Cmd msg, onOpen : (String.String -> msg) -> Platform.Sub.Sub msg, onClose : (String.String -> msg) -> Platform.Sub.Sub msg, onError : (Nats.PortsAPI.Message -> msg) -> Platform.Sub.Sub msg, onMessage : (Nats.PortsAPI.Message -> msg) -> Platform.Sub.Sub msg }"}],"values":[],"binops":[]},{"name":"Nats.Protocol","comment":" Provides types and utilities for the NATS protocol\n\n@docs Operation, Message, ServerInfo, ConnectOptions, parseOperation, toString\n\n@docs OperationResult, PartialOperation\n\n","unions":[{"name":"Operation","comment":" Typed operations of the NATS protocol\n","args":[],"cases":[["INFO",["Nats.Protocol.ServerInfo"]],["CONNECT",["Nats.Protocol.ConnectOptions"]],["PUB",["Nats.Protocol.Message"]],["SUB",["String.String","String.String","String.String"]],["UNSUB",["String.String","Basics.Int"]],["MSG",["String.String","Nats.Protocol.Message"]],["PING",[]],["PONG",[]],["OK",[]],["ERR",["String.String"]]]},{"name":"OperationResult","comment":" The result of parsing an operation\n","args":[],"cases":[["Operation",["Nats.Protocol.Operation"]],["Partial",["Nats.Protocol.PartialOperation"]],["Error",["String.String"]]]},{"name":"PartialOperation","comment":" A temporary state when a parsing an operation is incomplete\n","args":[],"cases":[]}],"aliases":[{"name":"ConnectOptions","comment":" Options for the CONNECT operation\n","args":[],"type":"{ verbose : Basics.Bool, pedantic : Basics.Bool, auth_token : Maybe.Maybe String.String, user : Maybe.Maybe String.String, pass : Maybe.Maybe String.String, name : Maybe.Maybe String.String, lang : String.String, version : String.String, protocol : Basics.Int }"},{"name":"Message","comment":" A NATS message\n","args":[],"type":"{ subject : String.String, replyTo : String.String, data : String.String }"},{"name":"ServerInfo","comment":" Information sent by the server immediately after opening the connection\n","args":[],"type":"{ server_id : String.String, version : String.String, go : String.String, host : String.String, port_ : Basics.Int, auth_required : Basics.Bool, max_payload : Basics.Int }"}],"values":[{"name":"parseOperation","comment":" Parse an operation (generally received from the server)\n","type":"String.String -> Maybe.Maybe Nats.Protocol.PartialOperation -> Nats.Protocol.OperationResult"},{"name":"toString","comment":" serialize an Operation (generally for sending to the server)\n","type":"Nats.Protocol.Operation -> String.String"}],"binops":[]},{"name":"Nats.Socket","comment":" A socket defines a connection to a nats server\n\n@docs Status, Socket\n\n@docs new, setDefault\n\n\n# Authentication\n\n@docs withAuthToken, withUserPass\n\n\n# Events\n\n@docs onOpen, onClose, onError\n\n","unions":[{"name":"Status","comment":" Possible statuses of a socket\n","args":[],"cases":[["Undefined",[]],["Opening",[]],["Opened",[]],["Closing",[]],["Closed",[]],["Error",["String.String"]]]}],"aliases":[{"name":"Socket","comment":" Representation of a Nats connection properties\n","args":["msg"],"type":"Nats.Internal.Types.Socket msg"}],"values":[{"name":"new","comment":" Initialize a Socket with a unique ID and a endpoint url\n\nThe 'sid' can be used in various places of the API to choose which socket\nshould handle an effect or a subscription.\n\n","type":"String.String -> String.String -> Nats.Socket.Socket msg"},{"name":"onClose","comment":" Set a handler message for when the connection is properly closed\n","type":"msg -> Nats.Socket.Socket msg -> Nats.Socket.Socket msg"},{"name":"onError","comment":" Set a handler message for when the connection is closed with error of cannot\nbe opened at all\n","type":"(String.String -> msg) -> Nats.Socket.Socket msg -> Nats.Socket.Socket msg"},{"name":"onOpen","comment":" Set a handler message for when the connection is opened\n\nAt the moment the message is received, the authentication may not be complete\nyet, in which case the connection will be closed with an error very quickly after\n\n","type":"(Nats.Protocol.ServerInfo -> msg) -> Nats.Socket.Socket msg -> Nats.Socket.Socket msg"},{"name":"setDefault","comment":" Set this socket as the default one\n\nIf an app has several opened sockets, one must be the default one. By default,\nthe default socket is the first to be opened. This function can be used to\ndesignate an arbitrary socket as the default one.\n\nIf several sockets have this flag, one of them will be picked\n\n","type":"Nats.Socket.Socket msg -> Nats.Socket.Socket msg"},{"name":"withAuthToken","comment":" Authenticate with a auth token\n","type":"String.String -> Nats.Socket.Socket msg -> Nats.Socket.Socket msg"},{"name":"withUserPass","comment":" Authenticate with a username and a password\n","type":"String.String -> String.String -> Nats.Socket.Socket msg -> Nats.Socket.Socket msg"}],"binops":[]},{"name":"Nats.Sub","comment":" Nats Subscription types\n\nThis module mimics Platform.Sub, but for Nats subscriptions\n\n@docs map, batch, none\n\n@docs tag, socket\n\n","unions":[],"aliases":[],"values":[{"name":"batch","comment":" Batch several subscriptions\n","type":"List.List (Nats.Sub msg) -> Nats.Sub msg"},{"name":"map","comment":" Map a Sub a to a Sub msg\n","type":"(a -> msg) -> Nats.Sub a -> Nats.Sub msg"},{"name":"none","comment":" An null subscription\n","type":"Nats.Sub msg"},{"name":"socket","comment":" Set a different socket id on the subscription\n","type":"String.String -> Nats.Sub msg -> Nats.Sub msg"},{"name":"tag","comment":" Add a #tag to the subscription(s) subject\nId the subject already has a tag, the two are combined with a '\\_' separator\n","type":"String.String -> Nats.Sub msg -> Nats.Sub msg"}],"binops":[]}]